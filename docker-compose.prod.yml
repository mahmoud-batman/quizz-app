version: "3"

services:
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  backend:
    container_name: backend-prod
    # image: backend-django
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn backend.core.wsgi --bind 0.0.0.0:8000

    # command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/app/backend/
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env.prod
    restart: always
    depends_on:
      - db

  frontend:
    container_name: frontend-prod
    image: react
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    volumes:
      - build_folder:/frontend/build
    ports:
      - 1337:80
    restart: always
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - build_folder:/var/www/frontend
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  build_folder:
